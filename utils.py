import os
import numpy as np
import matplotlib.pyplot as plt

def create_directories(path):
  """ 
  Checks whether the directory in which the files are to be saved exists,
  if it does not exist, it is created.
  
  Parameters
  ----------
      path: (string)
            The path where folder structure will be made
        
  """
  if not os.path.exists('{}'.format(path)):
    os.makedirs('{}/models'.format(path))
    os.makedirs('{}/images'.format(path))
    os.makedirs('{}/plots'.format(path))

  else:
    print("path already exists")
    
    
def get_batch(data, batch_size):
    """
    Generates a random batch taken from the dataset
    
    Parameters
    ----------
        data: (np.array)
              The n-dimensional dataset from which batches are to be selected
        data: (int)
              The number of batches to be selected

    """
    
    idx = np.random.randint(0, data.shape[0], batch_size)
    real_seqs = data[idx]
    return real_seqs

def sample_image(gan, epoch, X_train, path):
    """
    Generates array of sample images generated by generator model
    
    Parameters
    ----------
        gan:      (XX)
                  Instantiation of GAN or WGAN class
        epoch:    (int)
                  Epoch at which the sample is to be generated. This is passed
                  through by the training loop in the train method of the Trainer
                  class
         X_train: (np.array)
                  Training dataset. This is used to provide a comparison between
                  the generated data, and that from the training set.
    """
    
    
    fig, axarray = plt.subplots(4,1, figsize=(10,12))
    idx = np.random.randint(0, X_train.shape[0])
    
    
    axarray[0].plot(X_train[idx,0,:], c = 'r')
    axarray[0].plot(X_train[idx,1,:], c = 'b')
    axarray[0].plot(X_train[idx,2,:], c = 'g')

    axarray[0].set_title("Training data")
    plt.subplots_adjust(left=None, bottom=None, right=None, top=None, wspace=None, hspace=0.5)
    for i, ax in enumerate(axarray.flatten()):
        if i != 0:
          xx = gan.generate()
          ax.plot(xx[0,0,:], c ='r', label = "acc.x")
          ax.plot(xx[0,1,:], c ='b', label = "acc.y")
          ax.plot(xx[0,2,:], c ='g', label = "acc.z")

          ax.set_title("Generated example {}".format(i))
    plt.savefig('{}/images/sample{}.png'.format(path, epoch), transparent=True)
    plt.close()
